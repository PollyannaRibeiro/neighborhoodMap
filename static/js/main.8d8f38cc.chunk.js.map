{"version":3,"sources":["ListLocations.js","MapContainer.js","ResponsiveMenu.js","App.js","serviceWorker.js","index.js","icon_Wikipedia.png"],"names":["ListLocations","state","query","event","place","this","props","onPlaceSelected","setState","onQueryChanged","_this2","places","sidebarClass","sidebarOpen","react_default","a","createElement","className","role","aria-label","type","placeholder","value","onChange","updateQuery","target","map","name","key","id","onClick","onItemClick","selectedPlace","Component","MapContainer","markers","mapProps","onMapLoaded","selectedPlaceDetails","selectedPlaceName","selectedMaker","google","markersIds","Set","Object","keys","forEach","marker","maps","Marker","position","geometry","location","title","animation","Animation","DROP","setMap","addListener","onMarkerClick","delete","setAnimation","BOUNCE","imgSrc","photos","length","getUrl","dist","tabindex","zoom","initialCenter","lat","lng","options","styles","elementType","stylers","color","featureType","visibility","weight","onMapClicked","bind","onReady","onMapReady","visible","rating","wikiUrl","href","src","wiki","alt","formatted_phone_number","formatted_address","width","wikiDescription","GoogleApiWrapper","apiKey","ResponsiveMenu","react_burgers_dist","onMenuClick","borderRadius","padding","App","filteredPlaces","showingError","service","PlacesService","request","LatLng","radius","nearbySearch","results","status","success","PlacesServiceStatus","OK","error","filter","toLowerCase","includes","placeId","place_id","fields","Promise","resolve","reject","getDetails","details","encodeURIComponent","fetch","concat","then","response","json","detailsPromise","fetchDetails","wikiPromise","fetchWiki","all","values","assign","catch","console","log","previousState","src_ResponsiveMenu","src_ListLocations","src_MapContainer","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"sLAqEeA,oNAxDXC,MAAQ,CACJC,MAAO,+EAGCC,EAAOC,GACfC,KAAKC,MAAMC,gBAAgBH,uCAGnBF,GACRG,KAAKG,SAAS,CACVN,MAAOA,IAEXG,KAAKC,MAAMG,eAAeP,oCAGtB,IAAAQ,EAAAL,KAEAM,EAASN,KAAKC,MAAMK,OAEpBC,EAAe,UAKnB,OAJIP,KAAKC,MAAMO,cACXD,EAAe,gBAIfE,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAcM,KAAK,cAE/BJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,SACAG,aAAa,yBACbC,KAAK,OACLC,YAAY,wBACZC,MAAOjB,KAAKJ,MAAMC,MAClBqB,SAAU,SAACpB,GAAD,OAAWO,EAAKc,YAAYrB,EAAMsB,OAAOH,YAI3DR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACTN,EAAOe,IAAI,SAACtB,GAAD,OACRU,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAOE,aAAYf,EAAMuB,KAAOC,IAAKxB,EAAMyB,GAAKC,QAAS,SAAC3B,GAAD,OAASO,EAAKqB,YAAY5B,EAAOC,KACpGU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAYP,EAAKJ,MAAM0B,eAAiB5B,EAAMyB,KAAOnB,EAAKJ,MAAM0B,cAAcH,GAAK,sBAAwB,cAC3GzB,EAAMuB,oBAtDnBM,uCCEtBC,6MAUFC,QAAU,KAEVlC,MAAQ,CACJmC,SAAU,KACVV,IAAK,gFAIEU,EAAUV,GACjBrB,KAAKG,SAAS,CAAC4B,SAAUA,EAAUV,IAAKA,IACxCrB,KAAKC,MAAM+B,YAAYD,EAAUV,yCAGvBtB,GACVC,KAAKC,MAAMC,gBAAgBH,0CAKvBC,KAAKC,MAAM0B,eACX3B,KAAKC,MAAMC,gBAAgB,uCAI3B,IAAAG,EAAAL,KACAM,EAASN,KAAKC,MAAMK,OACpBqB,EAAgB3B,KAAKC,MAAM0B,cAC3BM,EAAuBjC,KAAKC,MAAMgC,qBAClCC,EAAoBP,EAAgBA,EAAcL,KAAO,GACzDa,EAAgB,KAGpB,GAAInC,KAAKJ,MAAMmC,SAAU,KACdK,EAAUpC,KAAKJ,MAAMmC,SAArBK,OACHf,EAAMrB,KAAKJ,MAAMyB,IAEjBgB,EAAa,IAAIC,IAAIC,OAAOC,KAAKxC,KAAK8B,UAE1CxB,EAAOmC,QAAQ,SAAC1C,GACZ,IAAI2C,EAASrC,EAAKyB,QAAQ/B,EAAMyB,IAEhC,IAAKkB,EAAO,CAER,IAAIA,EAAS,IAAIN,EAAOO,KAAKC,OAAO,CAChCC,SAAU9C,EAAM+C,SAASC,SACzBC,MAAOjD,EAAMuB,KACbA,KAAMvB,EAAMuB,KACZ2B,UAAWb,EAAOO,KAAKO,UAAUC,OAGrCT,EAAOU,OAAO/B,GACdqB,EAAOW,YAAY,QAAS,WAAKhD,EAAKiD,cAAcvD,KAEpDM,EAAKyB,QAAQ/B,EAAMyB,IAAMkB,EAe7B,OAZAL,EAAWkB,OAAOxD,EAAMyB,IAEpBG,GAAiB5B,EAAMyB,KAAOG,EAAcH,KAC5CW,EAAgBO,EAEZT,EACAS,EAAOc,aAAa,MAEpBd,EAAOc,aAAapB,EAAOO,KAAKO,UAAUO,SAI3Cf,IAIXL,EAAWI,QAAQ,SAAClB,GAChBlB,EAAKyB,QAAQP,GAAK6B,OAAO,aAClB/C,EAAKyB,QAAQP,KAI5B,IAAImC,EAAS,KAOb,OAJIzB,GAAwBA,EAAqB0B,QAAU1B,EAAqB0B,OAAOC,OAAS,IAC5FF,EAASzB,EAAqB0B,OAAO,GAAGE,UAKxCpD,EAAAC,EAAAC,cAACmD,EAAA,IAAD,CAAKlD,UAAW,MAAMC,KAAK,cAAckD,SAAS,IAC9C3B,OAAQpC,KAAKC,MAAMmC,OACnB4B,KAAM,GACNC,cAAe,CACXC,IAAK,MACLC,KAAM,KAEVC,QAAS,CACLC,OAAQ,CACJ,CACEC,YAAe,WACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEF,YAAe,mBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEF,YAAe,qBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEC,YAAe,iBACfH,YAAe,kBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEC,YAAe,6BACfH,YAAe,kBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEC,YAAe,6BACfH,YAAe,SACfC,QAAW,CACT,CACEG,WAAc,SAIpB,CACED,YAAe,6BACfH,YAAe,mBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEC,YAAe,8BACfH,YAAe,gBACfC,QAAW,CACT,CACEI,OAAU,KAIhB,CACEF,YAAe,8BACfH,YAAe,kBACfC,QAAW,CACT,CACEG,WAAc,OAEhB,CACEC,OAAU,OAIhB,CACEF,YAAe,8BACfH,YAAe,mBACfC,QAAW,CACT,CACEC,MAAS,WAEX,CACEE,WAAc,SAIpB,CACED,YAAe,oBACfH,YAAe,WACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEC,YAAe,MACfH,YAAe,WACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEC,YAAe,MACfH,YAAe,cACfC,QAAW,CACT,CACEG,WAAc,SAIpB,CACED,YAAe,MACfH,YAAe,mBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEC,YAAe,iBACfH,YAAe,WACfC,QAAW,CACT,CACEG,WAAc,QAIpB,CACED,YAAe,iBACfH,YAAe,cACfC,QAAW,CACT,CACEG,WAAc,QAIpB,CACED,YAAe,iBACfH,YAAe,mBACfC,QAAW,CACT,CACEC,MAAS,WAEX,CACEE,WAAc,QAIpB,CACED,YAAe,WACfH,YAAe,gBACfC,QAAW,CACT,CACEC,MAAS,WAEX,CACEE,WAAc,QAIpB,CACED,YAAe,WACfH,YAAe,cACfC,QAAW,CACT,CACEG,WAAc,QAIpB,CACED,YAAe,WACfH,YAAe,mBACfC,QAAW,CACT,CACEC,MAAS,WAEX,CACEG,OAAU,OAIhB,CACEF,YAAe,OACfH,YAAe,WACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEC,YAAe,OACfH,YAAe,cACfC,QAAW,CACT,CACEG,WAAc,SAIpB,CACED,YAAe,gBACfH,YAAe,WACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEC,YAAe,eACfH,YAAe,WACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEC,YAAe,eACfH,YAAe,k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","file":"static/js/main.8d8f38cc.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass ListLocations extends Component {\n\n    static propTypes = {\n        sidebarOpen: PropTypes.bool.isRequired,\n        selectedPlace: PropTypes.object,\n        places: PropTypes.array.isRequired,\n        onQueryChanged: PropTypes.func.isRequired,\n        onPlaceSelected: PropTypes.func.isRequired\n    }\n\n    state = {\n        query: '',\n    }\n\n    onItemClick(event, place){\n        this.props.onPlaceSelected(place);\n    }\n\n    updateQuery(query) {\n        this.setState({\n            query: query,\n        });\n        this.props.onQueryChanged(query);\n    }\n\n    render(){\n    \n        let places = this.props.places;\n\n        let sidebarClass = \"sidebar\"\n        if (this.props.sidebarOpen) {\n            sidebarClass = \"sidebar open\"\n        }\n\n        return(\n            <div className={sidebarClass} role=\"navigation\">\n\n                <div className='search-locations-bar'>\n                    <div className='search-locations-input-wrapper'>\n                        <input \n                        aria-label = \"Search the museum name\"\n                        type=\"text\" \n                        placeholder=\"Search by museum name\" \n                        value={this.state.query}\n                        onChange={(event) => this.updateQuery(event.target.value)}/>\n                    </div>\n                </div>  \n                \n                <div className=\"search-locations-results\" >\n                    <ul className='locations-list'>\n                        {places.map((place)=>(\n                            <li className=\"list\" aria-label={place.name}  key={place.id}  onClick={(event)=>this.onItemClick(event, place)}>\n                                <div className=\"list-container\">\n                                    <div className={ this.props.selectedPlace && place.id === this.props.selectedPlace.id ? \"list-selected-title\" : \"list-title\"}>\n                                        {place.name}\n                                    </div>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>   \n            </div>       \n        )\n    }\n}\n\nexport default ListLocations\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {Map, InfoWindow, GoogleApiWrapper} from 'google-maps-react';\nimport wiki from './icon_Wikipedia.png'\n\nclass MapContainer extends Component {\n\n    static propTypes = {\n        selectedPlace: PropTypes.object,\n        selectedPlaceDetails: PropTypes.object,\n        places: PropTypes.array.isRequired,\n        onMapLoaded: PropTypes.func.isRequired,\n        onPlaceSelected: PropTypes.func.isRequired\n    }\n    \n    markers = {};\n\n    state = {\n        mapProps: null,\n        map: null\n    }\n\n    // when the map is loaded, configures properties and send mapProps and to the parent component\n    onMapReady(mapProps, map){\n        this.setState({mapProps: mapProps, map: map})\n        this.props.onMapLoaded(mapProps, map);\n    }\n\n    onMarkerClick(place) {\n        this.props.onPlaceSelected(place);\n    }\n    \n    // to close the infoWindow\n    onMapClicked() {\n        if (this.props.selectedPlace) {\n            this.props.onPlaceSelected(null);\n        }\n    }\n\n    render(){\n        let places = this.props.places\n        let selectedPlace = this.props.selectedPlace\n        let selectedPlaceDetails = this.props.selectedPlaceDetails\n        let selectedPlaceName = selectedPlace ? selectedPlace.name : \"\"\n        let selectedMaker = null\n\n        // if the map is configured add the markers\n        if (this.state.mapProps) {\n            const {google} = this.state.mapProps;\n            let map = this.state.map;\n\n            let markersIds = new Set(Object.keys(this.markers));\n\n            places.forEach((place) => {\n                let marker = this.markers[place.id]\n\n                if (!marker){\n                    // create maker\n                    let marker = new google.maps.Marker({\n                        position: place.geometry.location,\n                        title: place.name,\n                        name: place.name,\n                        animation: google.maps.Animation.DROP\n                    });\n    \n                    marker.setMap(map);\n                    marker.addListener('click', ()=>{this.onMarkerClick(place)});\n\n                    this.markers[place.id] = marker\n                }\n\n                markersIds.delete(place.id)\n\n                if (selectedPlace && place.id === selectedPlace.id) {\n                    selectedMaker = marker\n\n                    if (selectedPlaceDetails) {\n                        marker.setAnimation(null);\n                    } else {\n                        marker.setAnimation(google.maps.Animation.BOUNCE);\n                    }\n                }\n                \n                return marker\n            });\n\n            // remove unused ids\n            markersIds.forEach((key)=>{\n                this.markers[key].setMap(null)\n                delete this.markers[key]\n            })\n        }\n\n        let imgSrc = null\n\n        // if there is any picture displays the first one\n        if (selectedPlaceDetails && selectedPlaceDetails.photos && selectedPlaceDetails.photos.length > 0) {\n            imgSrc = selectedPlaceDetails.photos[0].getUrl()\n        }\n\n        return (\n\n            <Map className= \"map\" role=\"application\" tabindex=\"1\"\n                google={this.props.google}\n                zoom={15}\n                initialCenter={{\n                    lat: 51.51,\n                    lng: -0.11\n                }} \n                options={{\n                    styles: [\n                        {\n                          \"elementType\": \"geometry\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#ebe3cd\"\n                            }\n                          ]\n                        },\n                        {\n                          \"elementType\": \"labels.text.fill\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#523735\"\n                            }\n                          ]\n                        },\n                        {\n                          \"elementType\": \"labels.text.stroke\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#f5f1e6\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"administrative\",\n                          \"elementType\": \"geometry.stroke\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#c9b2a6\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"administrative.land_parcel\",\n                          \"elementType\": \"geometry.stroke\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#dcd2be\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"administrative.land_parcel\",\n                          \"elementType\": \"labels\",\n                          \"stylers\": [\n                            {\n                              \"visibility\": \"off\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"administrative.land_parcel\",\n                          \"elementType\": \"labels.text.fill\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#ae9e90\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"administrative.neighborhood\",\n                          \"elementType\": \"geometry.fill\",\n                          \"stylers\": [\n                            {\n                              \"weight\": 6\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"administrative.neighborhood\",\n                          \"elementType\": \"geometry.stroke\",\n                          \"stylers\": [\n                            {\n                              \"visibility\": \"off\"\n                            },\n                            {\n                              \"weight\": 3.5\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"administrative.neighborhood\",\n                          \"elementType\": \"labels.text.fill\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#5782ac\"\n                            },\n                            {\n                              \"visibility\": \"off\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"landscape.natural\",\n                          \"elementType\": \"geometry\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#dfd2ae\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"poi\",\n                          \"elementType\": \"geometry\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#dfd2ae\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"poi\",\n                          \"elementType\": \"labels.text\",\n                          \"stylers\": [\n                            {\n                              \"visibility\": \"off\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"poi\",\n                          \"elementType\": \"labels.text.fill\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#93817c\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"poi.attraction\",\n                          \"elementType\": \"geometry\",\n                          \"stylers\": [\n                            {\n                              \"visibility\": \"on\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"poi.attraction\",\n                          \"elementType\": \"labels.text\",\n                          \"stylers\": [\n                            {\n                              \"visibility\": \"on\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"poi.attraction\",\n                          \"elementType\": \"labels.text.fill\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#9e9331\"\n                            },\n                            {\n                              \"visibility\": \"on\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"poi.park\",\n                          \"elementType\": \"geometry.fill\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#a5b076\"\n                            },\n                            {\n                              \"visibility\": \"on\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"poi.park\",\n                          \"elementType\": \"labels.text\",\n                          \"stylers\": [\n                            {\n                              \"visibility\": \"on\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"poi.park\",\n                          \"elementType\": \"labels.text.fill\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#447530\"\n                            },\n                            {\n                              \"weight\": 3.5\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"road\",\n                          \"elementType\": \"geometry\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#f5f1e6\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"road\",\n                          \"elementType\": \"labels.icon\",\n                          \"stylers\": [\n                            {\n                              \"visibility\": \"off\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"road.arterial\",\n                          \"elementType\": \"geometry\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#fdfcf8\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"road.highway\",\n                          \"elementType\": \"geometry\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#f8c967\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"road.highway\",\n                          \"elementType\": \"geometry.stroke\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#e9bc62\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"road.highway.controlled_access\",\n                          \"elementType\": \"geometry\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#e98d58\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"road.highway.controlled_access\",\n                          \"elementType\": \"geometry.stroke\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#db8555\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"road.local\",\n                          \"elementType\": \"labels\",\n                          \"stylers\": [\n                            {\n                              \"visibility\": \"off\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"road.local\",\n                          \"elementType\": \"labels.text.fill\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#806b63\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"transit\",\n                          \"stylers\": [\n                            {\n                              \"visibility\": \"off\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"transit.line\",\n                          \"elementType\": \"geometry\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#dfd2ae\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"transit.line\",\n                          \"elementType\": \"labels.text.fill\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#8f7d77\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"transit.line\",\n                          \"elementType\": \"labels.text.stroke\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#ebe3cd\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"transit.station\",\n                          \"elementType\": \"geometry\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#dfd2ae\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"water\",\n                          \"elementType\": \"geometry.fill\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#b9d3c2\"\n                            }\n                          ]\n                        },\n                        {\n                          \"featureType\": \"water\",\n                          \"elementType\": \"labels.text.fill\",\n                          \"stylers\": [\n                            {\n                              \"color\": \"#92998d\"\n                            }\n                          ]\n                        }\n                      ]\n                }}\n                \n\n                onClick={this.onMapClicked.bind(this)}\n                onReady={this.onMapReady.bind(this)}>\n                <InfoWindow\n                    marker={selectedMaker}\n                    visible={selectedPlaceDetails != null}>\n                    <div>\n                        <h2>{selectedPlaceName}</h2>\n                        { selectedPlaceDetails && \n                            <div className=\"museum-info\">\n                                { selectedPlaceDetails.rating && \n                                    <p>Rating: {selectedPlaceDetails.rating}</p>\n                                }\n                                { selectedPlaceDetails.wikiUrl &&\n                                    <a href={selectedPlaceDetails.wikiUrl}><img src={wiki} alt=\"Wikipedia\" className=\"wikipedia-logo\"/></a>\n                                }\n                                { selectedPlaceDetails.formatted_phone_number && \n                                    <p>Phone: {selectedPlaceDetails.formatted_phone_number}</p>\n                                }\n                                <p>Address: {selectedPlaceDetails.formatted_address}</p>\n                                { imgSrc && \n                                    <img className=\"museum-img\" src= {imgSrc} width=\"400\" alt={selectedPlaceName}/>\n                                }\n                                <p>{selectedPlaceDetails.wikiDescription}</p>\n                            </div>\n                        }\n                    </div>\n                </InfoWindow>       \n            </Map>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: (\"AIzaSyCBp9p14TKgr-Zlq4aNz6ZRxCsusD7hR6Q\")\n})(MapContainer)","import React, { Component } from 'react'\nimport { Slider } from 'react-burgers'\nimport PropTypes from 'prop-types'\n\nclass ResponsiveMenu extends Component{\n\n    static propTypes = {\n        sidebarOpen: PropTypes.bool.isRequired,\n        onMenuClick: PropTypes.func.isRequired\n    }\n\n    render(){\n\n        let color = this.props.sidebarOpen ? '#ffffff' : '#a2a2a2';\n\n        return(\n            <Slider onClick={this.props.onMenuClick}\n                color={color}\n                borderRadius={7}\n                padding='10px' />\n        )\n    }\n}\n\nexport default ResponsiveMenu;","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport ListLocations from './ListLocations'\nimport MapContainer from './MapContainer'\nimport ResponsiveMenu from './ResponsiveMenu'\n\n\nclass App extends Component {\n\n  state = {\n    google: null,\n    selectedPlace: null,\n    selectedPlaceDetails: null,\n    places: [],\n    filteredPlaces: [],\n    sidebarOpen: true,\n    showingError: false\n  }\n  \n  onMapLoaded(mapProps, map) {\n    const {google} = mapProps;\n    const service = new google.maps.places.PlacesService(map);\n\n    function callback(results, status) {\n      let success = (status === google.maps.places.PlacesServiceStatus.OK)\n      let places = success ? results : null\n\n      this.setState({\n        google: { mapProps: mapProps, map: map},\n        selectedPlace: null,\n        selectedPlaceDetails: null,\n        places: places, \n        filteredPlaces: places,\n        sidebarOpen: true, \n        error: !success});\n    }\n\n    var london = new google.maps.LatLng(51.51, -0.11);\n    var request = {\n      location: london,\n      radius: '1000',\n      type: ['museum']\n    };\n\n    service.nearbySearch(request, callback.bind(this));\n  }\n\n  updateQuery(query) {\n    function filterPlaces(place){\n        if (query.length > 0) {\n          return place.name.toLowerCase().includes(query.toLowerCase())\n        }\n        return true;\n    }\n    \n    let places = this.state.places;\n    this.setState({\n      google: this.state.google,\n      selectedPlace: null,\n      selectedPlaceDetails: null,\n      places: places,\n      filteredPlaces: this.state.places.filter(filterPlaces),\n      showingError: false\n    });\n  }\n\n  fetchDetails(place){\n    var request = {\n        placeId: place.place_id,\n        fields: ['name', 'rating', 'formatted_phone_number', 'formatted_address', 'photos']\n    };\n\n    const {google} = this.state.google.mapProps\n    const map = this.state.google.map\n\n    return new Promise( (resolve, reject) => {\n      let service = new google.maps.places.PlacesService(map);\n      service.getDetails(request, (details, status) => {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          resolve(details)\n        } else {\n          reject(status)\n        }\n      })\n    })\n  }\n\n  fetchWiki(place){\n    let name = encodeURIComponent(place.name)\n    return fetch(`https://en.wikipedia.org/w/api.php?action=opensearch&search=${name}&limit=10&namespace=0&origin=*&format=json`)\n    .then((response) => {\n      return response.json()\n    }).then((json) => {\n      return new Promise((resolve, reject) => {\n        if (json.length > 3 && json[1].length > 0) {\n          let wikiDescription = json[2][0]\n          let wikiUrl = json[3][0]\n  \n          return resolve({wikiDescription: wikiDescription, wikiUrl: wikiUrl})\n        } else {\n          return resolve({wikiDescription: \"\", wikiUrl: \"\"})\n        }\n      })\n    })\n  }\n\n  // when the place is selected, update the state and fetch the place details\n  onPlaceSelected(place){\n    let places = this.state.places;\n    let filteredPlaces = this.state.filteredPlaces;\n    this.setState({\n      google: this.state.google,\n      selectedPlace: place,\n      selectedPlaceDetails: null,\n      places: places,\n      filteredPlaces: filteredPlaces,\n      showingError: false,\n      sidebarOpen: this.state.sidebarOpen\n    });\n\n    if(!place) {\n      return\n    }\n\n    let detailsPromise = this.fetchDetails(place)\n    let wikiPromise = this.fetchWiki(place)\n\n    Promise.all([detailsPromise, wikiPromise]).then((values) => {\n      let details = Object.assign({}, values[0], values[1]);\n      this.setState({\n        google: this.state.google,\n        selectedPlace: place,\n        selectedPlaceDetails: details,\n        places: places,\n        filteredPlaces: filteredPlaces,\n        showingError: false,\n        sidebarOpen: this.state.sidebarOpen\n      });\n    }).catch((error) => {\n      console.log(error)\n    })\n  }\n\n  onMenuClick() {\n    this.setState((previousState) => {\n      previousState.sidebarOpen = !previousState.sidebarOpen\n      return previousState\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"header\">\n          <ResponsiveMenu sidebarOpen={this.state.sidebarOpen} onMenuClick={this.onMenuClick.bind(this)}/>\n          <h1>London's Museums</h1>\n        </header>\n        <ListLocations \n          sidebarOpen={this.state.sidebarOpen}\n          selectedPlace={this.state.selectedPlace}\n          places={this.state.filteredPlaces} \n          onQueryChanged={this.updateQuery.bind(this)} \n          onPlaceSelected={this.onPlaceSelected.bind(this)} />\n        <MapContainer \n          selectedPlace={this.state.selectedPlace}\n          selectedPlaceDetails={this.state.selectedPlaceDetails}\n          places={this.state.filteredPlaces} \n          onMapLoaded={this.onMapLoaded.bind(this)} \n          onPlaceSelected={this.onPlaceSelected.bind(this)} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/icon_Wikipedia.c7915b4b.png\";"],"sourceRoot":""}